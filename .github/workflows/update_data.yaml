on:
  schedule:
    # Every day at 9:00 UTC/5:00 ET
    - cron:  '0 9 * 1,2,9-12 *'
    # TNF 5:30 AM UTC / 12:30 AM ET
    - cron:  '30 5 * 1,2,9-12 5'
    # Early window: 10:00 PM UTC / 5:00 PM ET
    - cron:  '00 22 * 1,2,9-12 0'
    # Late window: 0:00 UTC / 8:00 ET
    - cron:  '5 0 * 1,2,9-12 1'
    # SNF/MNF: 5:30 UTC / 12:30 ET
    - cron:  '30 5 * 1,2,9-12 1'
    - cron:  '30 5 * 1,2,9-12 2'
  workflow_dispatch:
    inputs:
      full_rebuild:
        description: 'Full Rebuild'
        required: true
        default: false
        type: boolean

name: Update_PBP_Data

jobs:
  pbp_setup:
    runs-on: ubuntu-latest
    name: pbp_setup
    env:
      GH_TOKEN: ${{ secrets.NFLVERSE_GH_TOKEN }}
    outputs:
      seasons: ${{ steps.query_seasons.outputs.seasons }}
    steps:
      - name: query_seasons
        if: ${{ inputs.full_rebuild == false}}
        run: echo "seasons=$(gh release list -R nflverse/nflverse-pbp --json tagName --jq '[.[].tagName | match('\\d+').string] | max')" > $GITHUB_OUTPUT
      - id: query_seasons
        if: ${{ inputs.full_rebuild == true}}
        run: echo "seasons=$(gh release list -R nflverse/nflverse-pbp --json tagName --jq '[.[].tagName | match('\\d+').string]')" > $GITHUB_OUTPUT

  update_pbp:
    needs: pbp_setup
    name: Update ${{ matrix.season }} PBP Data
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        season: ${{ fromJson(needs.pbp_setup.outputs.seasons) }}
        type: pbp
    env:
      GITHUB_PAT: ${{ secrets.NFLVERSE_GH_TOKEN }}
      NFLVERSE_UPDATE_SEASON: ${{ matrix.season }}
      NFLVERSE_UPDATE_TYPE: ${{ matrix.type }}
    steps:
      - uses: actions/checkout@v3
      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
           cache-version: 1
           extra-packages: |
            nflverse/nflfastR
            nflverse/nflreadr
            nflverse/nflverse-data
            nflverse/fastrmodels
            ropensci/piggyback

      - name: Release pbp
        run: Rscript -e 'source("R/update_data.R")'
